version: '3'

services:
  db:
    container_name: db_user
    image: postgres:14-alpine
    restart: always
    volumes:
      - psqldata-async:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database-async

  pgadmin:
      container_name: pgadmin
      image: dpage/pgadmin4
      environment:
        - PGADMIN_DEFAULT_EMAIL=admin@membo.pro
        - PGADMIN_DEFAULT_PASSWORD=calidad
      ports:
        - 5050:80
      depends_on:
        - db

  backend:
    container_name: backend_prueba
    ports:
      - 8000:80
    build:
      context: ./src
      dockerfile: dockerfile
    image: backend_prueba

    volumes:
      - ./src/app:/app
    environment:
      - DEBUG=false
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database-async
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - HOST_UVICORN=0.0.0.0
      - FIRST_SUPERUSER=super_user@example.com
      - FIRST_SUPERUSER_PASSWORD=secretpassword
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - ALGORITHM=HS256
      - RABBITMQ_HOST=rabbitmq
      - QUEUE_NAME=queue_name
    depends_on:
      - db
      - rabbitmq
      - flower
    
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management

    ports:
      - 4369:4369
      - 5672:5672
      - 25672:25672
      - 15672:15672
    volumes:
      - rabbitmq_data:/rabbitmq

  flower:
    container_name: flower
    image: gregsi/latest-celery-flower-docker:latest
    environment:
      - AMQP_USERNAME=guest
      - AMQP_PASSWORD=guest
      - AMQP_ADMIN_USERNAME=guest
      - AMQP_ADMIN_PASSWORD=guest
      - AMQP_HOST=rabbitmq
      - AMQP_PORT=5672
      - AMQP_ADMIN_HOST=rabbitmq
      - AMQP_ADMIN_PORT=15672
      - FLOWER_BASIC_AUTH=user:test
    ports:
      - 5555:5555
    depends_on:
      - rabbitmq


  worker:
    container_name: worker
    build: 
      context: ./src
    command: celery -A workers worker -l INFO 
    volumes:
      - ./src/app:/app
    depends_on:
      - backend




volumes:
  psqldata-async:
    driver: local
  rabbitmq_data:
    driver: local

# networks:
#     deployml_network:

# redis:
#     image: redis:6-alpine

#   celery_worker:
#     build:
#       context: .
#       dockerfile: ./compose/local/fastapi/Dockerfile
#     image: fastapi_celery_example_celery_worker
#     command: /start-celeryworker
#     volumes:
#       - .:/app
#     env_file:
#       - .env/.dev-sample
#     depends_on:
#       - redis
#       - db

#   celery_beat:
#     build:
#       context: .
#       dockerfile: ./compose/local/fastapi/Dockerfile
#     image: fastapi_celery_example_celery_beat
#     command: /start-celerybeat
#     volumes:
#       - .:/app
#     env_file:
#       - .env/.dev-sample
#     depends_on:
#       - redis
#       - db

    